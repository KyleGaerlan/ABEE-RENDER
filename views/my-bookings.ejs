<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Bookings - A.BEE Travel and Tours</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/fontstyle.css">
    <style>
        .bookings-container {
            max-width: 1000px;
            margin: 120px auto 50px;
            padding: 30px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .bookings-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .bookings-header h1 {
            color: #333;
            margin-bottom: 10px;
        }

        .bookings-header p {
            color: #666;
        }

        .no-bookings {
            text-align: center;
            padding: 40px 0;
            color: #666;
        }

        .no-bookings p {
            margin-bottom: 20px;
        }

        .booking-card {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .booking-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .booking-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .booking-title {
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }

        .booking-id {
            font-size: 14px;
            color: #666;
        }

        .booking-status {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
        }

        .status-pending {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-confirmed {
            background-color: #d4edda;
            color: #155724;
        }

        .status-cancelled {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-completed {
            background-color: #cce5ff;
            color: #004085;
        }

        .booking-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        @media (max-width: 768px) {
            .booking-details {
                grid-template-columns: 1fr;
            }
        }

        .booking-detail {
            margin-bottom: 10px;
        }

        .detail-label {
            font-weight: 500;
            color: #666;
            margin-bottom: 5px;
        }

        .detail-value {
            color: #333;
        }

        .booking-actions {
            margin-top: 20px;
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .btn-view-details {
            padding: 8px 15px;
            background-color: #f26523;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .btn-view-details:hover {
            background-color: #d9531e;
        }

        .btn-cancel {
            padding: 8px 15px;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .btn-cancel:hover {
            background-color: #c82333;
        }

        .btn-cancel:disabled {
            background-color: #6c757d;
            cursor: not-allowed;
        }

        .btn-book-now {
            display: inline-block;
            padding: 10px 20px;
            background-color: #f26523;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            font-weight: bold;
            margin-top: 20px;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 20px;
            border-radius: 8px;
            width: 80%;
            max-width: 600px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            animation: modalFadeIn 0.3s;
        }

        @keyframes modalFadeIn {
            from {opacity: 0; transform: translateY(-50px);}
            to {opacity: 1; transform: translateY(0);}
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
        }

        .modal-header {
            padding-bottom: 15px;
            margin-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .modal-title {
            margin: 0;
            color: #333;
        }

        .modal-body {
            margin-bottom: 20px;
        }

        .detail-group {
            margin-bottom: 15px;
        }

        .detail-group-title {
            font-weight: bold;
            margin-bottom: 10px;
            color: #333;
        }

        .detail-item {
            display: flex;
            margin-bottom: 8px;
        }

        .detail-item-label {
            width: 40%;
            font-weight: 500;
            color: #666;
        }

        .detail-item-value {
            width: 60%;
            color: #333;
        }

        .modal-footer {
            padding-top: 15px;
            border-top: 1px solid #eee;
            display: flex;
            justify-content: flex-end;
        }
        .modal-footer button {
            margin-right: 30px;
        }

        .receipt-image {
            max-width: 100%;
            margin-top: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .payment-info {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 4px;
            margin-top: 15px;
        }

        .filter-container {
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 10px;
        }

        .filter-group {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .filter-label {
            font-weight: 500;
            color: #333;
        }

        .filter-select {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
        }

        .search-container {
            display: flex;
            gap: 10px;
        }

        .search-input {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 200px;
        }

        .search-button {
            padding: 8px 15px;
            background-color: #f26523;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .search-button:hover {
            background-color: #d9531e;
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            gap: 5px;
        }

        .pagination-button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background-color: white;
            color: #333;
            cursor: pointer;
            border-radius: 4px;
            transition: all 0.3s;
        }

        .pagination-button:hover:not(.active) {
            background-color: #f5f5f5;
        }

        .pagination-button.active {
            background-color: #f26523;
            color: white;
            border-color: #f26523;
        }

        .pagination-button:disabled {
            color: #ccc;
            cursor: not-allowed;
        }
    .hamburger-menu {
        display: none;
        flex-direction: column;
        justify-content: space-between;
        width: 30px;
        height: 21px;
        cursor: pointer;
        margin-right: 20px;
        z-index: 1001;
    }

    .hamburger-menu span {
        display: block;
        height: 3px;
        width: 100%;
        background-color: #333;
        border-radius: 3px;
        transition: all 0.3s ease;
    }

    .overlay-bg {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }

    .overlay-bg.active {
        display: block;
    }

    /* Hamburger menu animation */
    .hamburger-menu.active span:nth-child(1) {
        transform: translateY(9px) rotate(45deg);
    }

    .hamburger-menu.active span:nth-child(2) {
        opacity: 0;
    }

    .hamburger-menu.active span:nth-child(3) {
        transform: translateY(-9px) rotate(-45deg);
    }

    @media (max-width: 768px) {
    .hamburger-menu {
        display: flex;
        position: absolute;
        right: 20px;
        top: 20px;
    }
    
    nav ul {
        position: fixed;
        top: 0;
        right: -100%;
        width: 250px;
        background-color: white;
        flex-direction: column;
        padding: 60px 20px 30px;
        transition: right 0.3s ease;
        box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        margin-left: 0;
        align-items: flex-start;
        gap: 15px;
        overflow-y: auto;
    }
    
    nav ul.active {
        right: 0;
    }
    
    nav ul li {
        width: 100%;
        margin: 0;
        padding: 0;
    }
    
    nav ul li a, 
    nav ul li button {
        display: block;
        width: 100%;
        padding: 8px 0;
        text-align: left;
        font-size: 16px;
    }
}
.status-filters {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
}

.filter-btn {
  padding: 8px 16px;
  border: 1px solid #ddd;
  border-radius: 20px;
  background: white;
  color: #333;
  cursor: pointer;
  transition: all 0.3s;
  font-size: 14px;
}

.filter-btn:hover {
  background-color: #f26523;
  color: white;
}

.filter-btn.active {
  background-color: #f26523;
  color: white;
  border-color: #f26523;
}

    </style>
</head>
<body>
    <header>
        <div class="logo">
            <img src="/images/Image-logo.png" alt="Logo">
            <img src="/images/Text-logo.png" alt="Logo">
        </div>
        <div class="top-contact-bar">
            <div class="contact-info">
                <span style="display: none">📞 09361055665</span>
                <a href="https://www.facebook.com/abeetravelandtours" target="_blank" class="contact-icon" style="visibility: hidden">
                    <img src="/images/communication.png" alt="Facebook" class="facebook-logo">
                </a>
            </div>
        </div>
        <nav>
            <ul>
                
                <li><a href="/">Home</a></li>
                <li id="loginBtnWrapper">
                    <button id="loginBtn">Login</button>
                </li>
                <li id="userProfile" style="display: none;">
                    <a href="javascript:void(0);" id="profileIconWrapper">
                        <img src="/images/profile.png" alt="User Profile" id="profileIcon" class="profile-icon">
                    </a>
                    <ul id="profileDropdown" class="dropdown-menu" style="display: none;">
                        <li><a href="/profile">Profile</a></li>
                        <li><a href="/settings">Settings</a></li>
                        <li><a href="/logout" id="logoutBtn">Logout</a></li>
                    </ul>
                </li>
            </ul>
        </nav>
    </header>

    <div class="bookings-container">
        <div class="bookings-header">
            <h1>My Bookings</h1>
            <p>View and manage your tour bookings</p>
        </div>

        <div class="filter-container">
            <div class="filter-group">
                <span class="filter-label">Filter by status:</span>
                <div class="status-filters">
  <button class="filter-btn active" data-status="all">All</button>
  <button class="filter-btn" data-status="pending">Pending</button>
  <button class="filter-btn" data-status="confirmed">Confirmed</button>
  <button class="filter-btn" data-status="completed">Completed</button>
  <button class="filter-btn" data-status="cancelled">Cancelled</button>
</div>

<!-- Hidden select for backward compatibility (JS still uses it) -->
<select id="statusFilter" style="display: none;">
  <option value="all" selected>All</option>
  <option value="pending">Pending</option>
  <option value="confirmed">Confirmed</option>
  <option value="completed">Completed</option>
  <option value="cancelled">Cancelled</option>
</select>

            </div>
            <div class="search-container">
                <input type="text" id="searchInput" class="search-input" placeholder="Search by destination...">
                <button id="searchButton" class="search-button">Search</button>
            </div>
        </div>
 <% if (bookings && bookings.length > 0) { %>
            <div id="bookingsList">
                <% bookings.forEach(booking => { %>
                    <div class="booking-card" data-status="<%= booking.status %>" data-id="<%= booking._id %>">
                        <div class="booking-header">
                            <div>
                                <div class="booking-title"><%= booking.tourDetails?.title || 'Tour Booking' %></div>
                                <div class="booking-id">Booking ID: <%= booking.bookingId %></div>
                            </div>
                            <div class="booking-status status-<%= booking.status %>">
                                <%= booking.status.charAt(0).toUpperCase() + booking.status.slice(1) %>
                            </div>
                        </div>
                        <div class="booking-details">
                            <div class="booking-detail">
                                <div class="detail-label">Destination</div>
                                <div class="detail-value">
                                    <%= booking.tourDetails?.destination || booking.destination || 'Not specified' %>
                                    <%= (booking.tourDetails?.country || booking.country) ? ', ' + (booking.tourDetails?.country || booking.country) : '' %>
                                </div>
                            </div>
                            <div class="booking-detail">
                                <div class="detail-label">Travel Date</div>
                                <div class="detail-value"><%= new Date(booking.startDate).toLocaleDateString() %></div>
                            </div>
                            <div class="booking-detail">
                                <div class="detail-label">Travelers</div>
                                <div class="detail-value"><%= booking.travelers %> person<%= booking.travelers > 1 ? 's' : '' %></div>
                            </div>
                            <div class="booking-detail">
                                <div class="detail-label">Total Amount</div>
                                <div class="detail-value">₱<%= typeof booking.totalAmount === 'number' ? booking.totalAmount.toLocaleString() : booking.totalAmount %></div>
                            </div>
                        </div>
                        <div class="booking-actions">
                            <button class="btn-view-details" onclick="viewBookingDetails('<%= booking._id %>')">View Details</button>
                            <% if (booking.status === 'pending') { %>
                                <button class="btn-cancel" onclick="cancelBooking('<%= booking._id %>')">Cancel Booking</button>
                            <% } %>
                        </div>
                    </div>
                <% }); %>
            </div>

            <div class="pagination" id="pagination">

                <!-- Pagination will be added dynamically with JavaScript -->
            </div>
        <% } else { %>
            <div class="no-bookings">
                <p>You don't have any bookings yet.</p>
                <a href="/tours" class="btn-book-now">Book a Tour Now</a>
            </div>
        <% } %>
    </div>

    <!-- Booking Details Modal -->
    <div id="bookingDetailsModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeModal">&times;</span>
            <div class="modal-header">
                <h2 class="modal-title">Booking Details</h2>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- Content will be loaded dynamically -->
                <div class="loading">Loading booking details...</div>
            </div>
            <div class="modal-footer">
                <button class="btn-view-details" onclick="closeModal()">Close</button>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div id="confirmationModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeConfirmModal">&times;</span>
            <div class="modal-header">
                <h2 class="modal-title">Confirm Cancellation</h2>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to cancel this booking? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button class="btn-view-details" onclick="closeConfirmModal()" style="margin-left: 30px;">No</button>
                <button class="btn-cancel" id="confirmCancelBtn">Yes</button>
            </div>
        </div>
    </div>

    <footer class="footer-columns">
        <div class="footer-content">
            <div class="footer-left">
                <h3>Contact Us</h3>
                <p>📞 (044) 604 7273</p>
                <p>📞 09361055665</p>
                <p>📧 <a href="mailto:abeetravelandtours@gmail.com">abeetravelandtours@gmail.com</a></p>
            </div>
            <div class="footer-right">
            <h3>Follow Us</h3>
            <a href="https://www.facebook.com/abeetravelandtours" target="_blank">
                <img src="/images/communication.png" alt="Facebook" class="social-icon facebook-logo">
            </a>
            <a href="https://www.instagram.com/a.bee_travelandtours/" target="_blank">
                <img src="/images/instagram.png" alt="Instagram" class="social-icon instagram-logo">
            </a>
        </div>
        </div>
        <p class="footer-bottom">Copyright &copy; 2025 A.BEE Travel and Tours Website. All rights reserved.</p>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            checkAuthStatus();
            
            setupEventListeners();
            
            initializeFilters();
        });

        function checkAuthStatus() {
    fetch('/check-auth')
        .then(response => response.json())
        .then(data => {
            if (data.isLoggedIn) {
                document.getElementById('loginBtnWrapper').style.display = 'none';
                document.getElementById('userProfile').style.display = 'block';
                
                localStorage.setItem("isLoggedIn", "true");
            } else {
                document.getElementById('loginBtnWrapper').style.display = 'block';
                document.getElementById('userProfile').style.display = 'none';
                
                const bookingsContainer = document.querySelector('.bookings-container');
                bookingsContainer.innerHTML = `
                    <div class="bookings-header">
                        <h1>My Bookings</h1>
                        <p>View and manage your tour bookings</p>
                    </div>
                    <div class="no-bookings">
                        <p>Please log in to view your bookings.</p>
                        <a href="/" class="btn-book-now">Back to Home</a>
                    </div>
                `;
            }
        })
        .catch(error => {
            console.error('Error checking authentication status:', error);
        });
}


        function setupEventListeners() {
            const profileIcon = document.getElementById('profileIconWrapper');
            const profileDropdown = document.getElementById('profileDropdown');
            
            if (profileIcon) {
                profileIcon.addEventListener('click', function(e) {
                    e.stopPropagation();
                    profileDropdown.style.display = profileDropdown.style.display === 'block' ? 'none' : 'block';
                });
            }
            
            document.addEventListener('click', function() {
                if (profileDropdown) {
                    profileDropdown.style.display = 'none';
                }
            });
            
            const notificationIcon = document.getElementById('notificationIcon');
            const notificationDropdown = document.getElementById('notificationDropdown');
            
            if (notificationIcon) {
                notificationIcon.addEventListener('click', function(e) {
                    e.stopPropagation();
                    notificationDropdown.style.display = notificationDropdown.style.display === 'block' ? 'none' : 'block';
                });
            }
            
            document.getElementById('closeModal').addEventListener('click', closeModal);
            document.getElementById('closeConfirmModal').addEventListener('click', closeConfirmModal);
            
            window.addEventListener('click', function(event) {
                const bookingModal = document.getElementById('bookingDetailsModal');
                const confirmModal = document.getElementById('confirmationModal');
                
                if (event.target === bookingModal) {
                    closeModal();
                }
                
                if (event.target === confirmModal) {
                    closeConfirmModal();
                }
            });
        }

        function initializeFilters() {
            const statusFilter = document.getElementById('statusFilter');
            const searchButton = document.getElementById('searchButton');
            const searchInput = document.getElementById('searchInput');
            
            if (statusFilter) {
                statusFilter.addEventListener('change', filterBookings);
            }
            
            if (searchButton) {
                searchButton.addEventListener('click', filterBookings);
            }
            
            if (searchInput) {
                searchInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        filterBookings();
                    }
                });
            }
        }

        function filterBookings() {
            const statusFilter = document.getElementById('statusFilter').value;
            const searchInput = document.getElementById('searchInput').value.toLowerCase();
            const bookingCards = document.querySelectorAll('.booking-card');
            
            let visibleCount = 0;
            
            bookingCards.forEach(card => {
                const status = card.getAttribute('data-status');
                const destination = card.querySelector('.detail-value').textContent.toLowerCase();
                
                const statusMatch = statusFilter === 'all' || status === statusFilter;
                const searchMatch = !searchInput || destination.includes(searchInput);
                
                if (statusMatch && searchMatch) {
                    card.style.display = 'block';
                    visibleCount++;
                } else {
                    card.style.display = 'none';
                }
            });
            
            const bookingsList = document.getElementById('bookingsList');
            let noResultsMsg = document.getElementById('noResultsMsg');
            
            if (visibleCount === 0) {
                if (!noResultsMsg) {
                    noResultsMsg = document.createElement('div');
                    noResultsMsg.id = 'noResultsMsg';
                    noResultsMsg.className = 'no-bookings';
                    noResultsMsg.innerHTML = '<p>No bookings match your filters.</p>';
                    bookingsList.appendChild(noResultsMsg);
                }
            } else if (noResultsMsg) {
                noResultsMsg.remove();
            }
        }
    function viewBookingDetails(bookingId) {
  const modal = document.getElementById('bookingDetailsModal');
  const modalBody = document.getElementById('modalBody');

  modalBody.innerHTML = '<div class="loading">Loading booking details...</div>';
  modal.style.display = 'block';

  fetch(`/api/bookings/${bookingId}`)
    .then(res => res.json())
    .then(data => {
      if (!data.success || !data.booking) {
        modalBody.innerHTML = '<p>Failed to load booking details.</p>';
        return;
      }

      const b = data.booking;
      const created = new Date(b.createdAt).toLocaleString();
      const start = new Date(b.startDate).toLocaleDateString();
      const end = new Date(b.endDate).toLocaleDateString();

      const tour = b.tourDetails || {};

      let html = `
        <div class="detail-group">
          <div class="detail-group-title">Booking Summary</div>
          <div class="detail-item"><strong>Booking ID:</strong> ${b.bookingId}</div>
          <div class="detail-item"><strong>Status:</strong> <span class="booking-status status-${b.status}">${b.status}</span></div>
          <div class="detail-item"><strong>Date Created:</strong> ${created}</div>
        </div>

        <div class="detail-group">
          <div class="detail-group-title">Tour Details</div>
          <div class="detail-item"><strong>Tour:</strong> ${tour.title || "N/A"}</div>
          <div class="detail-item"><strong>Destination:</strong> ${tour.destination || b.destination}, ${tour.country || b.country}</div>
          <div class="detail-item"><strong>Duration:</strong> ${tour.duration || "N/A"} ${tour.durationUnit || ""}</div>
          <div class="detail-item"><strong>Season:</strong> ${tour.season || b.season || "N/A"}</div>
          <div class="detail-item"><strong>Dates:</strong> ${start} → ${end}</div>
          <div class="detail-item"><strong>Price per Person:</strong> ₱${(tour.price || 0).toLocaleString()}</div>
        </div>

        <div class="detail-group">
          <div class="detail-group-title">Traveler Information</div>
          <div class="detail-item"><strong>Number of Travelers:</strong> ${b.travelers}</div>
      `;

      if (Array.isArray(b.travelerDetails) && b.travelerDetails.length) {
        b.travelerDetails.forEach((t, i) => {
          html += `
            <div class="traveler-card">
              <h4>Traveler ${i + 1}</h4>
              <p><strong>Full Name:</strong> ${t.fullName || "N/A"}</p>
              <p><strong>Nationality:</strong> ${t.nationality || "N/A"}</p>
              <p><strong>Birthdate:</strong> ${t.birthdate ? new Date(t.birthdate).toLocaleDateString() : "N/A"}</p>
              <p><strong>Sex:</strong> ${t.sex || "N/A"}</p>
              <p><strong>Passport Number:</strong> ${t.passportNumber || "N/A"}</p>
              <p><strong>Passport Expiry:</strong> ${t.passportExpiry ? new Date(t.passportExpiry).toLocaleDateString() : "N/A"}</p>
              ${t.emergencyName || t.emergencyContact ? `<p><strong>Emergency Contact:</strong> ${t.emergencyName || ""} (${t.emergencyContact || ""})</p>` : ""}
              ${t.specialRequests ? `<p><strong>Special Requests:</strong> ${t.specialRequests}</p>` : ""}
            </div>
          `;
        });
      }

      html += `
        </div>
        <div class="detail-group">
          <div class="detail-group-title">Contact Information</div>
          <div class="detail-item"><strong>Full Name:</strong> ${b.fullName}</div>
          <div class="detail-item"><strong>Email:</strong> ${b.email}</div>
          <div class="detail-item"><strong>Phone:</strong> ${b.phone}</div>
          <div class="detail-item"><strong>Nationality:</strong> ${b.nationality}</div>
        </div>

        <div class="detail-group">
          <div class="detail-group-title">Payment</div>
          <div class="detail-item"><strong>Payment Method:</strong> ${b.paymentMethod || b.travelerDetails?.[0]?.paymentMethod || "N/A"}</div>
          <div class="detail-item"><strong>Budget:</strong> ₱${(b.budget || 0).toLocaleString()}</div>
          <div class="detail-item"><strong>Total Amount:</strong> ₱${(b.totalAmount || 0).toLocaleString()}</div>
          <div class="detail-item"><strong>Approval Status:</strong> ${b.approvalStatus || "Pending"}</div>
        </div>
      `;

      if (b.statusChangeHistory?.length) {
        html += `
          <div class="detail-group">
            <div class="detail-group-title">Status History</div>
            <ul>
              ${b.statusChangeHistory.map(s => `<li>${new Date(s.date).toLocaleString()} — ${s.status}</li>`).join("")}
            </ul>
          </div>
        `;
      }

      modalBody.innerHTML = html;
    })
    .catch(err => {
      console.error(err);
      modalBody.innerHTML = '<p>Error loading booking details.</p>';
    });
}

        function cancelBooking(bookingId) {
            const modal = document.getElementById('confirmationModal');
            const confirmBtn = document.getElementById('confirmCancelBtn');
            
            confirmBtn.onclick = function() {
                processCancellation(bookingId);
            };
            
            modal.style.display = 'block';
        }
        function processCancellation(bookingId) {
    closeConfirmModal();
    
    const modal = document.getElementById('bookingDetailsModal');
    const modalBody = document.getElementById('modalBody');
    const modalTitle = document.querySelector('#bookingDetailsModal .modal-title');
    
    modalTitle.textContent = "Booking Cancellation";
    modalBody.innerHTML = `
        <div style="text-align: center; padding: 20px;">
            <h3 style="color: #dc3545; margin-bottom: 20px;">Booking Cancellation Policy</h3>
            <div style="text-align: left; background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
                <p><strong>For GCash and PayPal payments:</strong></p>
                <ul>
                    <li>You can cancel within 7 days of making your booking</li>
                    <li>OR up to 3 days before your tour date</li>
                    <li>After these periods, cancellations are not permitted</li>
                </ul>
                <p><strong>For In-Store payments:</strong></p>
                <ul>
                    <li>Pending bookings can be cancelled at any time</li>
                    <li>Once confirmed, the standard cancellation policy applies</li>
                </ul>
            </div>
            <p>If you'd like to discuss this further or have any questions about your cancellation, please contact us at:</p>
            <p><strong>Phone:</strong> (044) 604 7273 or 09361055665</p>
            <p><strong>Email:</strong> abeetravelandtours@gmail.com</p>
            <div style="margin-top: 20px;">
                <button class="btn-cancel" onclick="confirmCancellation('${bookingId}')">Proceed with Cancellation</button>
            </div>
        </div>
    `;
    
    modal.style.display = 'block';
}
function confirmCancellation(bookingId) {
    const modalBody = document.getElementById('modalBody');
    modalBody.innerHTML = '<div style="text-align: center; padding: 20px;"><p>Processing your cancellation...</p></div>';
    
    fetch(`/api/user/bookings/${bookingId}/cancel`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    credentials: 'include'
})

    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const bookingCard = document.querySelector(`.booking-card[data-id="${bookingId}"]`);
            if (bookingCard) {
                bookingCard.querySelector('.booking-status').className = 'booking-status status-cancelled';
                bookingCard.querySelector('.booking-status').textContent = 'Cancelled';
                bookingCard.setAttribute('data-status', 'cancelled');
                
                const cancelBtn = bookingCard.querySelector('.btn-cancel');
                if (cancelBtn) {
                    cancelBtn.remove();
                }
            }
            
            modalBody.innerHTML = `
                <div style="text-align: center; padding: 20px;">
                    <h3 style="color: #28a745; margin-bottom: 20px;">Booking Cancelled Successfully</h3>
                    <p>Your booking has been cancelled.</p>
                    <p>Thank you for using A.BEE Travel and Tours.</p>
                    <button class="btn-view-details" onclick="closeModal(); window.location.reload();">OK</button>
                </div>
            `;
        } else {
            modalBody.innerHTML = `
                <div style="text-align: center; padding: 20px;">
                    <h3 style="color: #dc3545; margin-bottom: 20px;">Error</h3>
                    <p>${data.message || 'Failed to cancel booking'}</p>
                    <button class="btn-view-details" onclick="closeModal()">OK</button>
                </div>
            `;
        }
    })
    .catch(error => {
        console.error('Error cancelling booking:', error);
        modalBody.innerHTML = `
            <div style="text-align: center; padding: 20px;">
                <h3 style="color: #dc3545; margin-bottom: 20px;">Error</h3>
                <p>An error occurred while cancelling your booking. Please try again.</p>
                <button class="btn-view-details" onclick="closeModal()">OK</button>
            </div>
        `;
    });
}

        function closeModal() {
            document.getElementById('bookingDetailsModal').style.display = 'none';
        }

        function closeConfirmModal() {
            document.getElementById('confirmationModal').style.display = 'none';
        }

        function getBookingDetails(bookingId) {
            return fetch(`/api/bookings/${bookingId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch booking details');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success && data.booking) {
                        return data.booking;
                    } else {
                        throw new Error('Booking not found');
                    }
                });
        }

        function createPagination(totalItems, itemsPerPage = 5) {
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            const paginationContainer = document.getElementById('pagination');
            
            if (totalPages <= 1) {
                paginationContainer.innerHTML = '';
                return;
            }
            
            let html = '';
            html += `<button class="pagination-button" id="prev-page" ${currentPage === 1 ? 'disabled' : ''}>Previous</button>`;
            
            for (let i = 1; i <= totalPages; i++) {
                html += `<button class="pagination-button ${currentPage === i ? 'active' : ''}" data-page="${i}">${i}</button>`;
            }
            
            html += `<button class="pagination-button" id="next-page" ${currentPage === totalPages ? 'disabled' : ''}>Next</button>`;
            
            paginationContainer.innerHTML = html;
            
            document.querySelectorAll('.pagination-button[data-page]').forEach(button => {
                button.addEventListener('click', function() {
                    currentPage = parseInt(this.dataset.page);
                    showPage(currentPage);
                });
            });
            
            document.getElementById('prev-page').addEventListener('click', function() {
                if (currentPage > 1) {
                    currentPage--;
                    showPage(currentPage);
                }
            });
            
            document.getElementById('next-page').addEventListener('click', function() {
                if (currentPage < totalPages) {
                    currentPage++;
                    showPage(currentPage);
                }
            });
        }
function showPage(page) {
    const bookingCards = document.querySelectorAll('.booking-card');
    const itemsPerPage = 5;
    const startIndex = (page - 1) * itemsPerPage;
    
    const visibleCards = Array.from(bookingCards).filter(card => {
        const statusFilter = document.getElementById('statusFilter').value;
        const searchInput = document.getElementById('searchInput').value.toLowerCase();
        
        const status = card.getAttribute('data-status');
        const destination = card.querySelector('.detail-value').textContent.toLowerCase();
        
        const statusMatch = statusFilter === 'all' || status === statusFilter;
        const searchMatch = !searchInput || destination.includes(searchInput);
        
        return statusMatch && searchMatch;
    });
    
    const totalPages = Math.ceil(visibleCards.length / itemsPerPage);
    
    if (page > totalPages && totalPages > 0) {
        currentPage = totalPages;
        page = totalPages;
    }
    
    bookingCards.forEach(card => {
        card.style.display = 'none';
    });
    
    for (let i = 0; i < visibleCards.length; i++) {
        if (i >= startIndex && i < startIndex + itemsPerPage) {
            visibleCards[i].style.display = 'block';
        }
    }
    updatePaginationButtons(page, totalPages);
    
    const bookingsList = document.getElementById('bookingsList');
    let noResultsMsg = document.getElementById('noResultsMsg');
    
    if (visibleCards.length === 0) {
        if (!noResultsMsg) {
            noResultsMsg = document.createElement('div');
            noResultsMsg.id = 'noResultsMsg';
            noResultsMsg.className = 'no-bookings';
            noResultsMsg.innerHTML = '<p>No bookings match your filters.</p>';
            bookingsList.appendChild(noResultsMsg);
        }
    } else if (noResultsMsg) {
        noResultsMsg.remove();
    }
}
        function updatePaginationButtons(currentPage, totalPages) {
            const prevButton = document.getElementById('prev-page');
            const nextButton = document.getElementById('next-page');
            
            if (prevButton) {
                prevButton.disabled = currentPage === 1;
            }
            
            if (nextButton) {
                nextButton.disabled = currentPage === totalPages;
            }
            
            document.querySelectorAll('.pagination-button[data-page]').forEach(button => {
                const pageNum = parseInt(button.dataset.page);
                if (pageNum === currentPage) {
                    button.classList.add('active');
                } else {
                    button.classList.remove('active');
                }
            });
        }

        let currentPage = 1;
        const bookingsList = document.getElementById('bookingsList');
        if (bookingsList) {
            const bookingCards = bookingsList.querySelectorAll('.booking-card');
            if (bookingCards.length > 0) {
                createPagination(bookingCards.length);
                showPage(currentPage);
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
    const header = document.querySelector('header');
    if (header && !header.querySelector('.hamburger-menu')) {
        const hamburgerMenu = document.createElement('div');
        hamburgerMenu.className = 'hamburger-menu';
        hamburgerMenu.innerHTML = '<span></span><span></span><span></span>';
        header.appendChild(hamburgerMenu);
        
        if (!document.querySelector('.overlay-bg')) {
            const overlayBg = document.createElement('div');
            overlayBg.className = 'overlay-bg';
            document.body.appendChild(overlayBg);
        }
    }
    
    const hamburgerMenu = document.querySelector('.hamburger-menu');
    const navMenu = document.querySelector('nav ul');
    const overlayBg = document.querySelector('.overlay-bg');
    if (hamburgerMenu && navMenu && overlayBg) {
        hamburgerMenu.addEventListener('click', function(e) {
            e.stopPropagation();
            this.classList.toggle('active');
            navMenu.classList.toggle('active');
            overlayBg.classList.toggle('active');
            
            document.body.style.overflow = navMenu.classList.contains('active') ? 'hidden' : '';
        });
        
        overlayBg.addEventListener('click', function() {
            hamburgerMenu.classList.remove('active');
            navMenu.classList.remove('active');
            this.classList.remove('active');
            document.body.style.overflow = '';
        });

        const navLinks = navMenu.querySelectorAll('a, button');
        navLinks.forEach(link => {
            link.addEventListener('click', function() {
                if (window.innerWidth <= 768 && navMenu.classList.contains('active')) {
                    if (!link.closest('#userProfile')) {
                        hamburgerMenu.classList.remove('active');
                        navMenu.classList.remove('active');
                        overlayBg.classList.remove('active');
                        document.body.style.overflow = '';
                    }
                }
            });
        });
    }
    
    const profileIconWrapper = document.getElementById('profileIconWrapper');
    const profileDropdown = document.getElementById('profileDropdown');
    
    if (profileIconWrapper && profileDropdown) {
        const newProfileIconWrapper = profileIconWrapper.cloneNode(true);
        profileIconWrapper.parentNode.replaceChild(newProfileIconWrapper, profileIconWrapper);
        
        newProfileIconWrapper.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            if (profileDropdown.style.display === 'block') {
                profileDropdown.style.display = 'none';
            } else {
                profileDropdown.style.display = 'block';
            }
            
            if (window.innerWidth <= 768 && navMenu.classList.contains('active')) {
                e.stopImmediatePropagation();
            }
        });
    }
    
    const notificationIcon = document.getElementById('notificationIcon');
    const notificationDropdown = document.getElementById('notificationDropdown');
    
    if (notificationIcon && notificationDropdown) {
        const newNotificationIcon = notificationIcon.cloneNode(true);
        notificationIcon.parentNode.replaceChild(newNotificationIcon, notificationIcon);
        
        newNotificationIcon.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation(); 
            
            if (notificationDropdown.style.display === 'block') {
                notificationDropdown.style.display = 'none';
            } else {
                notificationDropdown.style.display = 'block';
            }
            
            if (window.innerWidth <= 768 && navMenu.classList.contains('active')) {
                e.stopImmediatePropagation();
            }
        });
    }
    
    if (profileDropdown) {
        profileDropdown.addEventListener('click', function(e) {
            if (window.innerWidth <= 768 && navMenu.classList.contains('active')) {
                e.stopPropagation();
            }
        });
    }
    
    if (notificationDropdown) {
        notificationDropdown.addEventListener('click', function(e) {
            if (window.innerWidth <= 768 && navMenu.classList.contains('active')) {
                e.stopPropagation();
            }
        });
    }
});
document.querySelectorAll('.filter-btn').forEach(btn => {
  btn.addEventListener('click', function() {
    document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
    this.classList.add('active');

    const status = this.getAttribute('data-status');
    document.getElementById('statusFilter').value = status;

    filterBookings();
  });
});

</script>
</body>
</html>

